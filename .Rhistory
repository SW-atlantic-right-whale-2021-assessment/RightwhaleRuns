))
waic <- waic(SIR = list(sir_base[[1]],
sir_depensation1[[1]],
# sir_depensation5[[1]],
sir_depensation2[[1]],
# sir_depensation6[[1]],
sir_depensation3[[1]],
# sir_depensation7[[1]],
sir_depensation4[[1]]
# sir_depensation8[[1]]
))
# Create a new model based on bayes factors
model_average <- weight_model(SIR = list(sir_base[[1]],
sir_depensation1[[1]],
#sir_depensation5[[1]],
sir_depensation2[[1]],
#sir_depensation6[[1]],
sir_depensation3[[1]],
#sir_depensation7[[1]],
sir_depensation4[[1]]
#sir_depensation8[[1]]
),
bayes_factor = bayes_f)
# For plotting make a vector of bayes factors, set NA for models that cant be compared (different likelihood)
bayes_vec <- c(bayes_f, NA)
waic <- c(waic, NA)
model_names <-  c("Base", "Scen15", "Scen15b", "Scen16", "Scen16b", "Scen17", "Scen17b", "Scen18", "Scen18b", "MA")
model_names <-  c("Base", "Scen15", "Scen16", "Scen17", "Scen18", "MA")
table2 <- data.frame(Model = model_names, BayesFactor = round(bayes_vec,4), WAIC = round(waic, 4))
write.csv(table2, file = paste0(paste0("Model runs/",file_names[10],"_bayes_factors_and_waic.csv")))
# Compare posteriors of all
compare_posteriors(
reference_sir = TRUE,
SIR = list(sir_base[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]],
sir_depensation3[[1]],
sir_depensation7[[1]],
sir_depensation4[[1]],
sir_depensation8[[1]],
model_average),
model_names = model_names,
bayes_factor = round(c(bayes_vec[1], bayes_vec[2], NA, bayes_vec[3], NA, bayes_vec[4], NA, bayes_vec[5], NA, NA),2),
file_name = paste0("Model runs/",file_names[10]),
years = c(2021, 2030))
# Plot IOA medians
plot_ioa_medians(SIR = list(sir_base[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]],
sir_depensation3[[1]],
sir_depensation7[[1]],
sir_depensation4[[1]],
sir_depensation8[[1]],
model_average),
model_names = model_names,
file_name = paste0("Model runs/",file_names[10]))
# Plot and get parameter values from Model Average
file_name <-paste0("Model runs/",file_names[10])
trajectory_summary_reference <- summary_sir(model_average$resamples_trajectories, object = "Trajectory_Summary", file_name = file_name)
plot_trajectory(model_average, Reference = sir_base[[1]],  file_name = file_name)
plot_abs_abundance(model_average,  file_name = file_name)
sir_list_ma <- list(model_average, sir_base[[2]], sir_base[[1]], model_average)
plot_density(SIR = sir_list_ma, posteriors_lwd = c(3, 1,3,3), posteriors_lty = c(1,1,1,1), posteriors_col = c(1, "grey45", "grey45", 1) ,  file_name = file_name)
plot_ioa(model_average,  file_name = file_name, ioa_names = NULL)
StateSpaceSIR::summary_table(model_average,  file_name = file_name)
save(model_average, file = paste0(file_name, ".Rdata"))
source("D:/GitHub/RightwhaleRuns/R/plot_ioa_medians.R")
source("R/plot_ioa_medians.R")
# Densities and trajectories with reference
sir_list <- list(sir_base,
sir_depensation1,
sir_depensation2,
sir_depensation3,
sir_depensation4,
sir_depensation5,
sir_depensation6,
sir_depensation7,
sir_depensation8)
for(i in 1:length(sir_list)){
plot_abs_abundance(sir_list[[i]][[1]],  file_name = paste0("Model runs/",file_names[i]))
}
# Plot surplus production function
plot_suplus_prod(SIRlist = list(sir_base2[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]]),
coolors = c("#FB8B24", "#D90368", "#820263", "#291720", "#04A777"),
model_names = c("Base", "Scen15", "Scen15b", "Scen16", "Scen16b"),
file_name = "Model runs/Model_average_2/Model_average_2_set1")
source("D:/GitHub/RightwhaleRuns/R/plot_surplus_prod_function.R")
source("R/plot_surplus_prod_function.R")
# Load all the models
file_names <- c("Base2/Base2",
"Depensation_1/Depensation_1",
"Depensation_2/Depensation_2",
"Depensation_3/Depensation_3",
"Depensation_4/Depensation_4",
"Depensation_5/Depensation_5",
"Depensation_6/Depensation_6",
"Depensation_7/Depensation_7",
"Depensation_8/Depensation_8",
"Model_average_2/Model_average_2")
for(i in 1:length(file_names)){
load(file = paste0("Model runs/",file_names[i], ".Rdata"))
}
# Plot surplus production function
plot_suplus_prod(SIRlist = list(sir_base2[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]]),
coolors = c("#FB8B24", "#D90368", "#820263", "#291720", "#04A777"),
model_names = c("Base", "Scen15", "Scen15b", "Scen16", "Scen16b"),
file_name = "Model runs/Model_average_2/Model_average_2_set1")
# Plot surplus production function
plot_suplus_prod(SIRlist = list(sir_base2[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]]),
coolors = c("#FB8B24", "#D90368", "#820263", "#291720", "#04A777"),
model_names = c("Base", "Scen15", "Scen15b", "Scen16", "Scen16b"),
file_name = "Model runs/Model_average_2/Model_average_2_set1")
# Plot surplus production function
plot_suplus_prod(SIRlist = list(sir_base2[[1]],
sir_depensation3[[1]],
sir_depensation7[[1]],
sir_depensation4[[1]],
sir_depensation8[[1]]),
coolors = c("#FB8B24", "#D90368", "#820263", "#291720", "#04A777"),
model_names = c("Base", "Scen17", "Scen17b", "Scen18", "Scen18b"),
file_name = "Model runs/Model_average_2/Model_average_2_set2")
# Densities and trajectories with reference
sir_list <- list(sir_base2,
sir_depensation1,
sir_depensation2,
sir_depensation3,
sir_depensation4,
sir_depensation5,
sir_depensation6,
sir_depensation7,
sir_depensation8)
for(i in 1:length(sir_list)){
plot_abs_abundance(sir_list[[i]][[1]],  file_name = paste0("Model runs/",file_names[i]))
}
for(i in 2:length(sir_list)){
# sir_list_tmp <- list(sir_list[[i]][[1]], sir_base2[[1]], sir_list[[i]][[1]])
# plot_density(SIR = sir_list_tmp,  file_name = paste0("Model runs/",file_names[i]),   priors = list(sir_list[[i]][[2]]), inc_reference = TRUE, target = ifelse(i == 7, FALSE, TRUE))
plot_trajectory( SIR = sir_list[[i]][[1]], Reference = sir_list[[1]][[1]],  file_name = paste0("Model runs/",file_names[i]))
}
#############################################################
#### Model averaging
#############################################################
# Get bayes factor for models with comparable likelihoods
bayes_f <- bayes_factor(SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
# sir_depensation5[[1]],
sir_depensation2[[1]],
# sir_depensation6[[1]],
sir_depensation3[[1]],
# sir_depensation7[[1]],
sir_depensation4[[1]]
# sir_depensation8[[1]]
))
waic <- waic(SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
# sir_depensation5[[1]],
sir_depensation2[[1]],
# sir_depensation6[[1]],
sir_depensation3[[1]],
# sir_depensation7[[1]],
sir_depensation4[[1]]
# sir_depensation8[[1]]
))
# Create a new model based on bayes factors
model_average <- weight_model(SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
#sir_depensation5[[1]],
sir_depensation2[[1]],
#sir_depensation6[[1]],
sir_depensation3[[1]],
#sir_depensation7[[1]],
sir_depensation4[[1]]
#sir_depensation8[[1]]
),
bayes_factor = bayes_f)
waic
waic <- StateSpaceSIR::waic(SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
# sir_depensation5[[1]],
sir_depensation2[[1]],
# sir_depensation6[[1]],
sir_depensation3[[1]],
# sir_depensation7[[1]],
sir_depensation4[[1]]
# sir_depensation8[[1]]
))
SIR = list(sir_base2[[1]],
+                         sir_depensation1[[1]],
+                         # sir_depensation5[[1]],
+                         sir_depensation2[[1]],
+                         # sir_depensation6[[1]],
+                         sir_depensation3[[1]],
+                         # sir_depensation7[[1]],
+                         sir_depensation4[[1]]
+                         # sir_depensation8[[1]]
+                         )
SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
# sir_depensation5[[1]],
sir_depensation2[[1]],
# sir_depensation6[[1]],
sir_depensation3[[1]],
# sir_depensation7[[1]],
sir_depensation4[[1]]
# sir_depensation8[[1]]
)
# Get WAIC
waic <- c()
for(i in 1:length(SIR)){
nll_cols <- c(paste0("NLL.IAs", unique(SIR[[i]]$inputs$rel.abundance$Index)), paste0("NLL.N", 1:nrow(SIR[[i]]$inputs$abs.abundance)), "NLL.GR") # add paste0("NLL.Count", 1:nrow(SIR[[i]]$inputs$count.data))
waic[i] <- -2*sum(log(colMeans(exp(SIR[[i]]$resamples_output[,nll_cols])))) + 2*sum(apply(SIR[[i]]$resamples_output[,nll_cols], 2, var))
}
nll_cols
i
SIR[[i]]$resamples_output
nll_cols
nll_cols <- grep(c("NLL.IAs", "NLL.N", "NLL.GR"),colnames(SIR[[i]]$resamples_output))
nll_cols <- sapply(c("NLL.IAs", "NLL.N", "NLL.GR"), function(x) grep(x,colnames(SIR[[i]]$resamples_output)))
nll_cols
nll_cols <- sapply(c("NLL.IAs", "NLL.N", "NLL.GR"), function(x) grep(x,colnames(SIR[[i]]$resamples_output)))
waic[i] <- -2*sum(log(colMeans(exp(SIR[[i]]$resamples_output[,nll_cols])))) + 2*sum(apply(SIR[[i]]$resamples_output[,nll_cols], 2, var))
#' Calculate WAIC
#'
#' @param SIR SIR Fit model or list of SIR fit models
#'
#' @return vector of WAIC
waic <- function( SIR ){
# If it is a single SIR, make into a list
if(class(SIR) == "SIR"){
stop("Error: only one SIR model provided")
}
# Get WAIC
waic <- c()
for(i in 1:length(SIR)){
nll_cols <- sapply(c("NLL.IAs", "NLL.N", "NLL.GR"), function(x) grep(x,colnames(SIR[[i]]$resamples_output)))
waic[i] <- -2*sum(log(colMeans(exp(SIR[[i]]$resamples_output[,nll_cols])))) + 2*sum(apply(SIR[[i]]$resamples_output[,nll_cols], 2, var))
}
return(waic)
}
waic <- waic(SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
# sir_depensation5[[1]],
sir_depensation2[[1]],
# sir_depensation6[[1]],
sir_depensation3[[1]],
# sir_depensation7[[1]],
sir_depensation4[[1]]
# sir_depensation8[[1]]
))
# Create a new model based on bayes factors
model_average <- weight_model(SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
#sir_depensation5[[1]],
sir_depensation2[[1]],
#sir_depensation6[[1]],
sir_depensation3[[1]],
#sir_depensation7[[1]],
sir_depensation4[[1]]
#sir_depensation8[[1]]
),
bayes_factor = bayes_f)
# For plotting make a vector of bayes factors, set NA for models that cant be compared (different likelihood)
bayes_vec <- c(bayes_f, NA)
bayes_f
waic
model_names <-  c("Base", "Dep-1", "Dep-2", "Dep-3", "Dep-4")
table2 <- data.frame(Model = model_names, BayesFactor = round(bayes_vec,4), WAIC = round(waic, 4))
model_names <-  c("Base", "Dep-1", "Dep-1b", "Dep-2", "Dep-2b", "Dep-3", "Dep-3b", "Dep-4", "Dep-4b", "MA")
model_names <-  c("Base", "Dep-1", "Dep-2", "Dep-3", "Dep-4", "MA")
table2 <- data.frame(Model = model_names, BayesFactor = round(bayes_vec,4), WAIC = round(waic, 4))
bayes_vec
waic
waic <- c(waic, NA)
model_names <-  c("Base", "Dep-1", "Dep-1b", "Dep-2", "Dep-2b", "Dep-3", "Dep-3b", "Dep-4", "Dep-4b", "MA")
model_names <-  c("Base", "Dep-1", "Dep-2", "Dep-3", "Dep-4", "MA")
table2 <- data.frame(Model = model_names, BayesFactor = round(bayes_vec,4), WAIC = round(waic, 4))
write.csv(table2, file = paste0(paste0("Model runs/",file_names[10],"_bayes_factors_and_waic.csv")))
file_names[10]
model_names <-  c("Base", "Dep-1", "Dep-1b", "Dep-2", "Dep-2b", "Dep-3", "Dep-3b", "Dep-4", "Dep-4b", "MA")
model_names_short <-  c("Base", "Dep-1", "Dep-2", "Dep-3", "Dep-4", "MA")
table2 <- data.frame(Model = model_names_short, BayesFactor = round(bayes_vec,4), WAIC = round(waic, 4))
write.csv(table2, file = paste0(paste0("Model runs/",file_names[10],"_bayes_factors_and_waic.csv")))
# Compare posteriors of all
compare_posteriors(
reference_sir = TRUE,
SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]],
sir_depensation3[[1]],
sir_depensation7[[1]],
sir_depensation4[[1]],
sir_depensation8[[1]],
model_average),
model_names = model_names,
bayes_factor = round(c(bayes_vec[1], bayes_vec[2], NA, bayes_vec[3], NA, bayes_vec[4], NA, bayes_vec[5], NA, NA),2),
file_name = paste0("Model runs/",file_names[10]),
years = c(2021, 2030))
# Plot IOA medians
plot_ioa_medians(SIR = list(sir_base2[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]],
sir_depensation3[[1]],
sir_depensation7[[1]],
sir_depensation4[[1]],
sir_depensation8[[1]],
model_average),
model_names = model_names,
file_name = paste0("Model runs/",file_names[10]))
# Plot and get parameter values from Model Average
file_name <-paste0("Model runs/",file_names[10])
trajectory_summary_reference <- summary_sir(model_average$resamples_trajectories, object = "Trajectory_Summary", file_name = file_name)
plot_trajectory(model_average, Reference = sir_base2[[1]],  file_name = file_name)
plot_abs_abundance(model_average,  file_name = file_name)
sir_list_ma <- list(model_average, sir_base2[[2]], sir_base2[[1]], model_average)
plot_density(SIR = sir_list_ma, posteriors_lwd = c(3, 1,3,3), posteriors_lty = c(1,1,1,1), posteriors_col = c(1, "grey45", "grey45", 1) ,  file_name = file_name)
plot_density(SIR = sir_list_ma, file_name = file_name)
source("D:/GitHub/RightwhaleRuns/R/plot_density.R")
source("R/plot_density.R")
# Updated from Romero et al 2022 with models that include Allee effects
library(StateSpaceSIR)
source("R/plot_ioa_medians.R")
source("R/plot_surplus_prod_function.R")
source("R/plot_density_model_average.R")
plot_density_ma(SIR = sir_list_ma, posteriors_lwd = c(3, 1,3,3), posteriors_lty = c(1,1,1,1), posteriors_col = c(1, "grey45", "grey45", 1) ,  file_name = file_name)
plot_ioa(model_average,  file_name = file_name, ioa_names = NULL)
StateSpaceSIR::summary_table(model_average,  file_name = file_name)
save(model_average, file = paste0(file_name, ".Rdata"))
source("D:/GitHub/RightwhaleRuns/R/plot_density.R")
library(StateSpaceSIR)
library(EnvStats)
source("R/plot_surplus_prod_function.R")
source("R/plot_density_depensation.R")
source("R/plot_density.R")
################################################################################
# Base model
################################################################################
file_name <- "Model runs/Base2/Base2"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_base2[[1]],  file_name = file_name)
# plot_trajectory(sir_base2[[2]],  file_name = paste0(file_name, "prior"))
# plot_abs_abundance(sir_base2[[1]],  file_name = file_name)
plot_density(SIR = sir_base2,  file_name = file_name, posteriors_lwd = c(3,1), posteriors_lty = rep(1, 2), posteriors_col = c(1,1))
# plot_ioa(sir_base2[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_base2[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_base2[[1]]), file_name = file_name, model_names = "Base", coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 1 - Hilborn et al 2014
################################################################################
file_name <- "Model runs/Depensation_1/Depensation_1"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_depensation1[[1]],  file_name = file_name)
# plot_trajectory(sir_depensation1[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation1[[1]], sir_depensation1[[2]], sir_base2[[1]], sir_depensation1[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
# plot_ioa(sir_depensation1[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_depensation1[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation1[[1]], sir_depensation1[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-1", "Dep-1 prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 2 - Logistic
################################################################################
file_name <- "Model runs/Depensation_2/Depensation_2"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_depensation2[[1]],  file_name = file_name)
# plot_trajectory(sir_depensation2[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation2[[1]], sir_depensation2[[2]], sir_base2[[1]], sir_depensation2[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
# plot_ioa(sir_depensation2[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_depensation2[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation2[[1]], sir_depensation2[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-2", "Dep-2 prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 3 - Lin & Li 2002
################################################################################
file_name <- "Model runs/Depensation_3/Depensation_3"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_depensation3[[1]],  file_name = file_name)
# plot_trajectory(sir_depensation3[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation3[[1]], sir_depensation3[[2]], sir_base2[[1]], sir_depensation3[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
# plot_ioa(sir_depensation3[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_depensation3[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation3[[1]], sir_depensation3[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-3", "Dep-3 prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 4 - Haider et al 2017
################################################################################
file_name <- "Model runs/Depensation_4/Depensation_4"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_depensation4[[1]],  file_name = file_name)
# plot_trajectory(sir_depensation4[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation4[[1]], sir_depensation4[[2]], sir_base2[[1]], sir_depensation4[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
# plot_ioa(sir_depensation4[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_depensation4[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation4[[1]], sir_depensation4[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-4", "Dep-4 prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 5 - Hilborn et al 2014 w beta prior
################################################################################
file_name <- "Model runs/Depensation_5/Depensation_5"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_depensation5[[1]],  file_name = file_name)
# plot_abs_abundance(sir_depensation5[[1]],  file_name = file_name)
# plot_trajectory(sir_depensation5[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation5[[1]], sir_depensation5[[2]], sir_base2[[1]], sir_depensation5[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
# plot_ioa(sir_depensation5[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_depensation5[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation5[[1]], sir_depensation5[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-1b", "Dep-1b prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 6 - Logistic w/ beta prior
################################################################################
file_name <- "Model runs/Depensation_6/Depensation_6"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_depensation6[[1]],  file_name = file_name)
# plot_trajectory(sir_depensation6[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation6[[1]], sir_depensation6[[2]], sir_base2[[1]], sir_depensation6[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
# plot_ioa(sir_depensation6[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_depensation6[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation6[[1]], sir_depensation6[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-2b", "Dep-2b prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 7 - Lin & Li 2002 w/ beta prior
################################################################################
file_name <- "Model runs/Depensation_7/Depensation_7"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_depensation7[[1]],  file_name = file_name)
# plot_trajectory(sir_depensation7[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation7[[1]], sir_depensation7[[2]], sir_base2[[1]], sir_depensation7[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
# plot_ioa(sir_depensation7[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_depensation7[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation7[[1]], sir_depensation7[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-3b", "Dep-3b prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
################################################################################
# Depensation model 8 - Haider et al 2017 w/ beta prior
################################################################################
file_name <- "Model runs/Depensation_8/Depensation_8"
load(file = paste0(file_name, ".Rdata"))
# plot_trajectory(sir_depensation8[[1]],  file_name = file_name)
# plot_trajectory(sir_depensation8[[2]],  file_name = paste0(file_name, "prior"))
plot_density_depensation(SIR = list(sir_depensation8[[1]], sir_depensation8[[2]], sir_base2[[1]], sir_depensation8[[1]]),  file_name = file_name,  posteriors_lwd = c(3,1,3,3), posteriors_lty = c(1,1,2,1), posteriors_col = c(1,1,"grey45",1))
# plot_ioa(sir_depensation8[[1]],  file_name = file_name, ioa_names = NULL )
# summary_table(sir_depensation8[[1]],  file_name = file_name)
plot_suplus_prod(list(sir_depensation8[[1]], sir_depensation8[[2]], sir_base2[[1]]), file_name = file_name, model_names = c("Dep-4", "Dep-4b prior", "Base"), coolors = c("#104F55", "#2F0A28", "#3185FC"))
# Plot surplus production function
plot_suplus_prod(SIRlist = list(sir_base2[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]]),
coolors = c("#FB8B24", "#D90368", "#820263", "#291720", "#04A777"),
model_names = c("Base", "Dep-1", "Dep-1b", "Dep-2", "Dep-2b"),
file_name = "Model runs/Model_average_2/Model_average_2_set1")
# Plot surplus production function
plot_suplus_prod(SIRlist = list(sir_base2[[1]],
sir_depensation1[[1]],
sir_depensation5[[1]],
sir_depensation2[[1]],
sir_depensation6[[1]]),
coolors = c("#FB8B24", "#D90368", "#820263", "#291720", "#04A777"),
model_names = c("Base", "Dep-1", "Dep-1b", "Dep-2", "Dep-2b"),
file_name = "Model runs/Model_average_2/Model_average_2_set1")
# Plot surplus production function
plot_suplus_prod(SIRlist = list(sir_base2[[1]],
sir_depensation3[[1]],
sir_depensation7[[1]],
sir_depensation4[[1]],
sir_depensation8[[1]]),
coolors = c("#FB8B24", "#D90368", "#820263", "#291720", "#04A777"),
model_names = c("Base", "Dep-3", "Dep-3b", "Dep-4", "Dep-4b"),
file_name = "Model runs/Model_average_2/Model_average_2_set2")
################################################################################
# Load libraries
################################################################################
# rm(list=ls())
library(StateSpaceSIR)
require(MASS)
library(matrixStats)
################################################################################
# Read in and clean data
################################################################################
balle<- read.csv ( "Data/SRW_aerial_survey_1999-2023.csv" , sep=";" , dec=".")
balle<- balle [c(-11,-12),] #11 y 12 (2004) vuelos con el aerocomander// esta es la seleccion de datos que hice para la los paràmetros para el nùmero de ballenas que dan la vuelta anualmente por PV
balle <- subset (balle, Year<2024) # Subset years
####Variable Respuesta ############
balle$RTA <- (balle$T) # Total of observed whales
balle$Year <- as.factor(balle$Year)
################################################################################
# First stage - regression model
################################################################################
#	Regresion model selected (up to  2019)
regresion.balle.nb.jul.cuad <- glm.nb(RTA ~ Year + Juliano + I(Juliano^2), data = balle, link = log)
summary (regresion.balle.nb.jul.cuad)
nb.Jul.cuad <- cbind(Estimate = coef(regresion.balle.nb.jul.cuad))
nb.Jul.cuad # Parameter estimates
vcov.nb.Jul.cuad <- vcov(regresion.balle.nb.jul.cuad) # Variance-covariance matrix
vcov.nb.Jul.cuad # NOTE: dispersion parameter is not included
################################################################################
# Load libraries
################################################################################
# rm(list=ls())
library(StateSpaceSIR)
