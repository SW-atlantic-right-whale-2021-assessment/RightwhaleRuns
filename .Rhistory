}else{
IA_pread[[i]] <- q1_est[,i] * N_hat ^ (1 + q2_tmp) # Use analytic q
}
# Summarize
IA_summary[[i]] <-  matrix(nrow = length(row_names), ncol = dim(IA_pread[[i]])[2])
IA_summary[[i]][1, ] <- sapply(IA_pread[[i]], mean)
IA_summary[[i]][2:6, ] <- sapply(IA_pread[[i]], quantile, probs= c(0.5, 0.025, 0.975, 0.25, 0.75))
IA_summary[[i]][7, ] <- sapply(IA_pread[[i]], min)
IA_summary[[i]][8, ] <- sapply(IA_pread[[i]], max)
IA_summary[[i]][9, ] <- sapply(IA_pread[[i]], length)
IA_summary[[i]] <- data.frame(IA_summary[[i]])
names(IA_summary[[i]]) <- paste0("IA", i, "_", IA.yr.range[[i]])
row.names(IA_summary[[i]]) <- row_names
# Plot limits
ymax[i] <- max(unlist(c(IA_summary[[i]][2:6,], rel.abundance.sub$Lower95, rel.abundance.sub$Upper95))) # Max of posterior
# Get posterior predictive
if(posterior_pred){
# Objects to save
IA_posterior_pred[[i]] <- matrix(NA, nrow = nrow(IA_pread[[i]]), ncol = length(IA.yrs))
IA_posterior_pred_sum[[i]] <-  matrix(nrow = length(row_names), ncol = length(IA.yrs))
IndYear <- IA.yrs - min(IA.yrs)+1
# Simulate from posterior
for(j in 1:nrow(IA_pread[[i]])){ # Loop across posterior draws
IA_posterior_pred[[i]][j,] <- exp(MASS::mvrnorm(
n = 1,
mu = as.numeric(log(IA_pread[[i]][j,IndYear]) - diag(rel.var.covar.sub)/2),
Sigma = rel.var.covar.sub))
}
IA_posterior_pred[[i]] <- data.frame(IA_posterior_pred[[i]])
# Summarize
IA_posterior_pred_sum[[i]] <-  matrix(nrow = length(row_names), ncol = dim(IA_posterior_pred[[i]])[2])
IA_posterior_pred_sum[[i]][1, ] <- sapply(IA_posterior_pred[[i]], mean)
IA_posterior_pred_sum[[i]][2:6, ] <- sapply(IA_posterior_pred[[i]], quantile, probs= c(0.5, 0.025, 0.975, 0.25, 0.75))
IA_posterior_pred_sum[[i]][7, ] <- sapply(IA_posterior_pred[[i]], min)
IA_posterior_pred_sum[[i]][8, ] <- sapply(IA_posterior_pred[[i]], max)
IA_posterior_pred_sum[[i]][9, ] <- sapply(IA_posterior_pred[[i]], length)
IA_posterior_pred_sum[[i]] <- data.frame(IA_posterior_pred_sum[[i]])
names(IA_posterior_pred_sum[[i]]) <- paste0("IA", i, "_", IA.yrs)
row.names(IA_posterior_pred_sum[[i]]) <- row_names
# update plot limits
ymax[i] <- max(unlist(c(ymax[i], IA_posterior_pred_sum[[i]][2:6,], rel.abundance.sub$Lower95, rel.abundance.sub$Upper95))) # Max of posterior predictive
}
}
ymin <- 0
for(j in 1:(1 + !is.null(file_name))){
if(j == 2){
filename <- paste0(file_name, "_IOA_fit", ".png")
png( file = filename , width=169 / 25.4, height = 100 / 25.4, family = "serif", units = "in", res = 300)
}
par(mfrow = c(1,length(IA_summary)), mar=c(3, 3 , 0.5 , 0.3) , oma=c(0 , 0 , 0 , 0), tcl = -0.35, mgp = c(1.75, 0.5, 0))
# Loop through inices
for(i in 1:length(IA_summary)){
rel.abundance.sub <- rel.abundance[which(rel.abundance$Index == i),]
# Plot configuration
plot(y = NA, x = NA,
ylim = c(ymin, ymax[i]),
xlim = c(min(IA.yr.range[[i]]), max(IA.yr.range[[i]])),
xlab = "Year", ylab = "Relative abundance")
# Credible interval
polygon(
x = c(IA.yr.range[[i]], rev(IA.yr.range[[i]])),
y = c(IA_summary[[i]][3, ],rev(IA_summary[[i]][4, ])),
col = adjustcolor(coolors, alpha = 0.2), border = NA) # 95% CI
polygon( x = c(IA.yr.range[[i]], rev(IA.yr.range[[i]])),
y = c(IA_summary[[i]][5, ], rev(IA_summary[[i]][6, ])),
col = adjustcolor(coolors, alpha = 0.5), border = NA) # 50% CI
# Median
lines( x = IA.yr.range[[i]], y = IA_summary[[i]][2, ], col = coolors, lwd = 3) # Median
# Relative abundance
points( x = rel.abundance.sub$Year,
y = rel.abundance.sub$IA.obs,
col = 1, pch = 16, cex = 2)
arrows( x0 = rel.abundance.sub$Year,
y0 = rel.abundance.sub$Lower95,
x1 = rel.abundance.sub$Year,
y1 = rel.abundance.sub$Upper95,
length=0.05, angle=90, code=3, lwd = 3, col = 1)
# Posterior predictive
if(posterior_pred){
# Mean
points( x = rel.abundance.sub$Year + 0.25,
y = IA_posterior_pred_sum[[i]][2,],
col = "Grey70", pch = 16, cex = 2)
arrows( x0 = rel.abundance.sub$Year + 0.25,
y0 = as.numeric(IA_posterior_pred_sum[[i]][3,]),
x1 = rel.abundance.sub$Year + 0.25,
y1 = as.numeric(IA_posterior_pred_sum[[i]][4,]),
length=0.05, angle=90, code=3, lwd = 3, col = "Grey70")
}
if(!is.null(ioa_names)){
legend("topleft", legend = ioa_names[i] ,bty = "n")
}
}
if(j == 2){ dev.off()}
}
}
plot_ioa(sir_base2[[1]],  file_name = NULL, ioa_names = NULL )
warnings()
sir_base2 <- list()
for(i in 1:2){
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 1000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 5e-186, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
################################################################################
# Base model
################################################################################
file_name <- "Model runs/Base2/Base2"
sir_base2 <- list()
for(i in 1:2){
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 1000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-187, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
plot_ioa(sir_base2[[1]],  file_name = NULL, ioa_names = NULL )
View(Rel.Abundance.SWRight)
cooke_ioa
21^2
rel.abundance
rel.var.covar.wide
tail(rel.var.covar.wide)
sqrt(diag(rel.var.covar.wide))
qlnorm(0.025, mean = log(rel.abundance$IA.obs), sd = sqrt(diag(rel.var.covar.wide)))
qlnorm(0.975, mean = log(rel.abundance$IA.obs), sd = sqrt(diag(rel.var.covar.wide)))
sw_right_rel_abundance
sqrt(log(cooke_ioa$PopSE/cooke_ioa$Population^2 + 1))
library(StateSpaceSIR)
library(EnvStats)
library(plyr)
################################################################################
# Read in data
################################################################################
# -- Catch
sw_right_data<-read.delim("Data/datosModeloBallenasmiles2020Miles1648to2019.csv", sep=";",header=FALSE)
names(sw_right_data)<- c("Year","CatchMin","CatchMax","Nt")
# Four periods of SLRs
# - Period 1: 1648-1770: SLR = 1
# - Period 2: 1771-1850: SLR ~ N(1.6, 0.04)
# - Period 3: 1851-1973: SLR ~ N(1.09, 0.04)
# - Period 4: 1974-Present: SLR = 1
catch_list <- list(sw_right_data[which(sw_right_data$Year < 1771),1:3],
sw_right_data[which(sw_right_data$Year >= 1771 & sw_right_data$Year <= 1850),1:3],
sw_right_data[which(sw_right_data$Year >= 1851 & sw_right_data$Year <= 1973),1:3],
sw_right_data[which(sw_right_data$Year > 1973),1:3])
# -- Absolute abundance
Abs.Abundance.2009 <- data.frame(Year = 2009, N.obs = 4029, CV.obs = NA) # FIXME: not used as of 4/24/21
Abs.Abundance.2010 <- data.frame(Year = 2010, N.obs = 4245, CV.obs = 245/4245) # 2010: 4245 (SE: 245, 95% CI 3,765, 4,725).
# -- Relative abundance
# - Index 1: Accumulated number of whales
sw_right_rel_abundance<-read.csv("Data/Accumulated_n_whales_1999_to_2019.csv")
Rel.Abundance.SWRight <- data.frame(Index = rep(1, nrow(sw_right_rel_abundance)),
Year = sw_right_rel_abundance$Year,
IA.obs = sw_right_rel_abundance$A_xy_mu_sim)
var_covar <- sw_right_rel_abundance[,paste0("X",1:17)]
colnames(var_covar) <- 1:17
Rel.Abundance.SWRight = cbind(Rel.Abundance.SWRight, var_covar)
# - Index 2: Cooke et al 2001 mark-recapture females
cooke_ioa <-read.csv("Data/Cooke_et_al_2001.csv")
Rel.Abundance.SWRight.Cooke <- data.frame(Index = rep(2, nrow(cooke_ioa)),
Year = cooke_ioa$Year,
IA.obs = cooke_ioa$Population)
Rel.Abundance.SWRight.Cooke = cbind(Rel.Abundance.SWRight.Cooke, diag(sqrt(log(cooke_ioa$PopSE/cooke_ioa$Population^2 + 1)))) #CV to lognmoral sigma
# - Combine
Rel.Abundance.SWRight <- rbind.fill(Rel.Abundance.SWRight, Rel.Abundance.SWRight.Cooke)
# -- Set up directories
for(i in 1:8){
dir.create(paste0("Model runs/Depensation_",i))
}
################################################################################
# Base model
################################################################################
file_name <- "Model runs/Base2/Base2"
sir_base2 <- list()
for(i in 1:2){
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 1000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-187, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
}
i = 1
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 1000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-100, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 1000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-6, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 1000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-5, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 1000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-4, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 1000,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-3, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 100,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = 1e-2, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
summary_table(sir_base2[[1]],  file_name = NULL)
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 100,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = .5, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
1e-2
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 100,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = .05, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
summary_table(sir_base2[[1]],  file_name = NULL)
sir_base2[[i]] <-  StateSpaceSIR(
file_name = NULL,
allee_model = 0,
n_resamples = 100,
priors = make_prior_list(r_max =  make_prior(runif, 0, 0.11),
N_obs = make_prior(runif, 100, 10000),
var_N = make_prior(runif, 6.506055e-05, 6.506055e-05 * 10),
z = make_prior(use = FALSE),
Pmsy = make_prior(runif, 0.5, 0.8)),
catch_multipliers = make_multiplier_list(
make_prior(1),
make_prior(rnorm, 1.60 , 0.04),
make_prior(rnorm, 1.09, 0.04),
make_prior(1)),
target.Yr = 2019,
num.haplotypes = 24,
output.Yrs = c(2021, 2030),
abs.abundance = Abs.Abundance.2010,
abs.abundance.key = TRUE,
rel.abundance = Rel.Abundance.SWRight,
rel.abundance.key = TRUE, # Indices of abundance
count.data = Count.Data, # Not used
count.data.key = FALSE, # Don't use count data
growth.rate.obs = c(0.074, 0.033, FALSE), # Do not include growth rate
growth.rate.Yrs = c(1995, 1996, 1997, 1998), # Not used
catch.data = catch_list,
control = sir_control(threshold = .03, progress_bar = TRUE),
realized_prior = ifelse(i == 1, FALSE, TRUE))
summary_table(sir_base2[[1]],  file_name = NULL)
plot_ioa(sir_base2[[1]],  file_name = NULL, ioa_names = NULL )
summary_table(sir_base2[[1]],  file_name = NULL)
